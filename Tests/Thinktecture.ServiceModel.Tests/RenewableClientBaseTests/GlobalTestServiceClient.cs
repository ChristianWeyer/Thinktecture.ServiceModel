//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.CodeDom.Compiler;
using System.Diagnostics;
using System.ServiceModel;
using Thinktecture.ServiceModel;

[GeneratedCode("System.ServiceModel", "3.0.0.0")]
[ServiceContract(ConfigurationName="IGlobalTestService")]
public interface IGlobalTestService
{
    [OperationContract(Action="http://tempuri.org/IEchoService/Echo",
        ReplyAction="http://tempuri.org/IEchoService/EchoResponse")]
    string Echo(string input);

    [OperationContract(Action = "http://tempuri.org/IEchoService/EchoThrowAnException",
        ReplyAction = "http://tempuri.org/IEchoService/EchoThrowAnExceptionResponse")]
    void EchoThrowAnException();
}

[GeneratedCode("System.ServiceModel", "3.0.0.0")]
public interface IGlobalTestServiceChannel : IGlobalTestService, IClientChannel
{
}

[DebuggerStepThrough()]
[GeneratedCode("System.ServiceModel", "3.0.0.0")]
public partial class GlobalTestServiceClient : RenewableClientBase<IGlobalTestService>, IGlobalTestService
{
    public GlobalTestServiceClient(string endpointConfigurationName)
        : base(endpointConfigurationName)
    {
    }

    public GlobalTestServiceClient(string endpointConfigurationName, bool autoRecover) :
        base(endpointConfigurationName, autoRecover)
    {
    }

    //public EchoServiceClient(string endpointConfigurationName, string remoteAddress) : 
    //        base(endpointConfigurationName, remoteAddress)
    //{
    //}

    //public EchoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
    //        base(endpointConfigurationName, remoteAddress)
    //{
    //}

    //public EchoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
    //        base(binding, remoteAddress)
    //{
    //}

    public string Echo(string input)
    {
        return base.Channel.Echo(input);
    }

    public void EchoThrowAnException()
    {
        base.Channel.EchoThrowAnException();
    }
}